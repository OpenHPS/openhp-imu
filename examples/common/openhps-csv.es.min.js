import*as e from"./openhps-core.es.min.js";var t={562:(e,t,s)=>{const{Transform:r}=s(719),[i]=Buffer.from("\r"),[n]=Buffer.from("\n"),o={escape:'"',headers:null,mapHeaders:({header:e})=>e,mapValues:({value:e})=>e,newline:"\n",quote:'"',raw:!1,separator:",",skipComments:!1,skipLines:null,maxRowBytes:Number.MAX_SAFE_INTEGER,strict:!1};class CsvParser extends r{constructor(e={}){super({objectMode:!0,highWaterMark:16}),Array.isArray(e)&&(e={headers:e});const t=Object.assign({},o,e);t.customNewline=t.newline!==o.newline;for(const e of["newline","quote","separator"])void 0!==t[e]&&([t[e]]=Buffer.from(t[e]));t.escape=(e||{}).escape?Buffer.from(t.escape)[0]:t.quote,this.state={empty:t.raw?Buffer.alloc(0):"",escaped:!1,first:!0,lineNumber:0,previousEnd:0,rowLength:0,quoted:!1},this._prev=null,!1===t.headers&&(t.strict=!1),(t.headers||!1===t.headers)&&(this.state.first=!1),this.options=t,this.headers=t.headers}parseCell(e,t,s){const{escape:r,quote:i}=this.options;e[t]===i&&e[s-1]===i&&(t++,s--);let n=t;for(let o=t;o<s;o++)e[o]===r&&o+1<s&&e[o+1]===i&&o++,n!==o&&(e[n]=e[o]),n++;return this.parseValue(e,t,n)}parseLine(e,t,s){const{customNewline:r,escape:n,mapHeaders:o,mapValues:a,quote:h,separator:c,skipComments:u,skipLines:p}=this.options;s--,!r&&e.length&&e[s-1]===i&&s--;const l=c,d=[];let f=!1,m=t;if(u){const s="string"==typeof u?u:"#";if(e[t]===Buffer.from(s)[0])return}const v=e=>{if(this.state.first)return e;const t=d.length,s=this.headers[t];return a({header:s,index:t,value:e})};for(let r=t;r<s;r++){const t=!f&&e[r]===h,i=f&&e[r]===h&&r+1<=s&&e[r+1]===l,o=f&&e[r]===n&&r+1<s&&e[r+1]===h;if(t||i)f=!f;else if(o)r++;else if(e[r]===l&&!f){let t=this.parseCell(e,m,r);t=v(t),d.push(t),m=r+1}}if(m<s){let t=this.parseCell(e,m,s);t=v(t),d.push(t)}e[s-1]===l&&d.push(v(this.state.empty));const w=p&&p>this.state.lineNumber;if(this.state.lineNumber++,this.state.first&&!w)return this.state.first=!1,this.headers=d.map(((e,t)=>o({header:e,index:t}))),void this.emit("headers",this.headers);if(!w&&this.options.strict&&d.length!==this.headers.length){const e=new RangeError("Row length does not match headers");this.emit("error",e)}else w||this.writeRow(d)}parseValue(e,t,s){return this.options.raw?e.slice(t,s):e.toString("utf-8",t,s)}writeRow(e){const t=!1===this.headers?e.map(((e,t)=>t)):this.headers,s=e.reduce(((e,s,r)=>{const i=t[r];return null===i||(void 0!==i?e[i]=s:e[`_${r}`]=s),e}),{});this.push(s)}_flush(e){if(this.state.escaped||!this._prev)return e();this.parseLine(this._prev,this.state.previousEnd,this._prev.length+1),e()}_transform(e,t,s){"string"==typeof e&&(e=Buffer.from(e));const{escape:r,quote:o}=this.options;let a=0,h=e;this._prev&&(a=this._prev.length,h=Buffer.concat([this._prev,e]),this._prev=null);const c=h.length;for(let e=a;e<c;e++){const t=h[e],u=e+1<c?h[e+1]:null;if(this.state.rowLength++,this.state.rowLength>this.options.maxRowBytes)return s(new Error("Row exceeds the maximum size"));this.state.escaped||t!==r||u!==o||e===a?t!==o?this.state.quoted||(this.state.first&&!this.options.customNewline&&(t===n?this.options.newline=n:t===i&&u!==n&&(this.options.newline=i)),t===this.options.newline&&(this.parseLine(h,this.state.previousEnd,e+1),this.state.previousEnd=e+1,this.state.rowLength=0)):this.state.escaped?this.state.escaped=!1:this.state.quoted=!this.state.quoted:this.state.escaped=!0}return this.state.previousEnd===c?(this.state.previousEnd=0,s()):c-this.state.previousEnd<e.length?(this._prev=e,this.state.previousEnd-=c-e.length,s()):(this._prev=h,void s())}}e.exports=e=>new CsvParser(e)},920:()=>{},60:()=>{},413:()=>{},719:()=>{}},s={};function r(e){var i=s[e];if(void 0!==i)return i.exports;var n=s[e]={exports:{}};return t[e](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var s in t)r.o(t,s)&&!r.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};(()=>{r.d(i,{w:()=>CSVDataObjectService,f:()=>CSVDataSource});function t(e,t,s,r){return new(s||(s=Promise))((function(i,n){function o(e){try{h(r.next(e))}catch(e){n(e)}}function a(e){try{h(r.throw(e))}catch(e){n(e)}}function h(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(o,a)}h((r=r.apply(e,t||[])).next())}))}Object.create;Object.create;const s=(e=>{var t={};return r.d(t,e),t})({DataObject:()=>e.DataObject,DataObjectService:()=>e.DataObjectService,ListSourceNode:()=>e.ListSourceNode,MemoryDataService:()=>e.MemoryDataService});var n=r(60),o=r(920),a=r(562),h=r(413);class CSVDataSource extends s.ListSourceNode{constructor(e,t,r){super([],r),this.options.source=this.options.source||new s.DataObject(e?n.basename(e):void 0),this.rowCallback=t,this._file=e,this.once("build",this._initCSV.bind(this))}_initCSV(){return new Promise(((e,t)=>{if(!this._file)return e();this.parseStream(o.createReadStream(this._file)).then((t=>{this.inputData=t,e()})).catch(t)}))}parseContent(e){const t=new h.Readable;return t.push(e),t.push(null),this.parseStream(t)}parseStream(e){return new Promise(((s,r)=>{const i=[],n=e.pipe(a(this.options)).on("data",(e=>t(this,void 0,void 0,(function*(){const t=yield Promise.resolve(this.rowCallback(e));null!=t&&(void 0===t.source&&(t.source=this.source),i.push(t))})))).on("end",(()=>{n.destroy()})).on("close",(function(e){if(e)return r(e);s(i)}))}))}reload(e){return this._file=e,this.reset()}reset(){return new Promise(((e,t)=>{this.inputData=[],this._initCSV().then((()=>{e()})).catch((e=>{t(e)}))}))}}class CSVDataObjectService extends s.DataObjectService{constructor(e,t){super(new s.MemoryDataService(e)),this.options=t,this.once("build",this._initCSV.bind(this))}_initCSV(){return new Promise(((e,t)=>{if(!this.options.file)return e();this.parseStream(o.createReadStream(this.options.file)).then((e=>Promise.all(e.map(this.insertObject.bind(this))))).then((()=>{e()})).catch(t)}))}parseContent(e){const t=new h.Readable;return t.push(e),t.push(null),this.parseStream(t)}parseStream(e){return new Promise(((s,r)=>{const i=[];let n=0,o=0;const h=e.pipe(a(this.options)).on("data",(e=>t(this,void 0,void 0,(function*(){n++;const t=yield Promise.resolve(this.options.rowCallback(e));null!=t&&i.push(t),o++})))).on("end",(()=>{h.destroy()})).on("close",(function(e){if(e)return r(e);if(o!==n){const e=setInterval((()=>{o===n&&(clearInterval(e),s(i))}),100)}else s(i)}))}))}}})();var n=i.w,o=i.f;export{n as CSVDataObjectService,o as CSVDataSource};
//# sourceMappingURL=openhps-csv.es.min.js.map