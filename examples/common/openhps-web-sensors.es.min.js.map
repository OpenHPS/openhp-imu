{"version":3,"file":"web/openhps-web-sensors.es.min.js","mappings":"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","sources":["webpack://@openhps/web-sensors/external module \"./openhps-core.es.min.js\"","webpack://@openhps/web-sensors/./dist/esm/web/SensorSourceNode.js","webpack://@openhps/web-sensors/./dist/esm/legacy/SensorSourceNode.js","webpack://@openhps/web-sensors/./dist/esm/index.js","webpack://@openhps/web-sensors/webpack/bootstrap","webpack://@openhps/web-sensors/webpack/runtime/define property getters","webpack://@openhps/web-sensors/webpack/runtime/harmony module decorator","webpack://@openhps/web-sensors/webpack/runtime/hasOwnProperty shorthand","webpack://@openhps/web-sensors/webpack/startup"],"sourcesContent":["var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"AbsoluteOrientationSensor\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.AbsoluteOrientationSensor, [\"Acceleration\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Acceleration, [\"Accelerometer\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Accelerometer, [\"AngularVelocity\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.AngularVelocity, [\"AngularVelocityUnit\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.AngularVelocityUnit, [\"DataFrame\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.DataFrame, [\"DataObject\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.DataObject, [\"Gyroscope\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Gyroscope, [\"LinearAccelerationSensor\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.LinearAccelerationSensor, [\"Magnetism\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Magnetism, [\"Magnetometer\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Magnetometer, [\"Orientation\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Orientation, [\"Quaternion\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.Quaternion, [\"RelativeOrientationSensor\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.RelativeOrientationSensor, [\"SourceNode\"]: () => __WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__.SourceNode });","/// <reference types=\"web\" />\nimport { SourceNode, Acceleration, Orientation, Quaternion, DataFrame, LinearAccelerationSensor as LinearAccelerationSensorObject, AbsoluteOrientationSensor as AbsoluteOrientationSensorObject, RelativeOrientationSensor as RelativeOrientationSensorObject, Magnetometer as MagnetometerObject, Gyroscope as GyroscopeObject, Accelerometer as AccelerometerObject, AngularVelocity, AngularVelocityUnit, Magnetism, } from '@openhps/core';\n/**\n * Sensor source node using Web Sensor API.\n */\nexport class SensorSourceNode extends SourceNode {\n    constructor(options) {\n        super(options);\n        this._subscriptions = new Map();\n        this._values = new Map();\n        this._lastPush = 0;\n        this._running = false;\n        this.options.interval = this.options.interval || 100;\n        if (this.options.autoStart) {\n            this.once('build', this.start.bind(this));\n        }\n        this.once('destroy', this.stop.bind(this));\n    }\n    static checkPermissions(sensors) {\n        return this.requestPermissions(sensors);\n    }\n    static requestPermissions(sensors) {\n        return new Promise((resolve, reject) => {\n            Promise.all(sensors\n                .map((sensor) => this.getPermissions(sensor).map((permission) => navigator.permissions.query({ name: permission })))\n                .reduce((a, b) => [...a, ...b]))\n                .then((results) => {\n                if (results.every((result) => result.state === 'granted')) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n            })\n                .catch(reject);\n        });\n    }\n    start() {\n        return new Promise((resolve) => {\n            this._running = true;\n            if (this._subscriptions.size > 0) {\n                return resolve();\n            }\n            this.options.sensors.forEach((sensor) => {\n                const SensorType = this.findSensor(sensor);\n                const sensorInstance = new SensorType({\n                    frequency: Math.round(1000 / this.options.interval),\n                });\n                sensorInstance.addEventListener('reading', (event) => {\n                    if (!this._running)\n                        return;\n                    this._values.set(sensor, event.target);\n                    if (this._isUpdated()) {\n                        this._lastPush = event.timeStamp;\n                        this.createFrame().catch((ex) => {\n                            this.logger('error', 'Unable to create sensor data frame!', ex);\n                        });\n                    }\n                });\n                sensorInstance.start();\n                this._subscriptions.set(sensor, sensorInstance);\n            });\n            resolve();\n        });\n    }\n    _isUpdated() {\n        return (Array.from(this._values.values()).filter((sensor) => sensor.timestamp > this._lastPush).length ===\n            Array.from(this._subscriptions.values()).filter((sensor) => sensor.activated).length);\n    }\n    stop() {\n        return new Promise((resolve) => {\n            if (this.options.softStop) {\n                this._running = false;\n            }\n            else {\n                this._subscriptions.forEach((value) => value.stop());\n                this._subscriptions = new Map();\n                this._values = new Map();\n            }\n            resolve();\n        });\n    }\n    createFrame() {\n        return new Promise((resolve) => {\n            const dataFrame = new DataFrame();\n            dataFrame.source = this.source;\n            const acceleration = this._values.get(AccelerometerObject);\n            const linearAcceleration = this._values.get(LinearAccelerationSensorObject);\n            const gyroscope = this._values.get(GyroscopeObject);\n            const orientation = this._values.get(AbsoluteOrientationSensorObject);\n            const relativeOrientation = this._values.get(RelativeOrientationSensorObject);\n            const magnetometer = this._values.get(MagnetometerObject);\n            const sourceUID = this.source ? this.source.uid : this.uid;\n            const frequency = 1000 / this.options.interval;\n            if (acceleration) {\n                dataFrame.addSensor(new AccelerometerObject(sourceUID + '_accel', new Acceleration(acceleration.x, acceleration.y, acceleration.z), frequency));\n            }\n            if (linearAcceleration) {\n                dataFrame.addSensor(new LinearAccelerationSensorObject(sourceUID + '_linearaccel', new Acceleration(linearAcceleration.x, linearAcceleration.y, linearAcceleration.z), frequency));\n            }\n            if (gyroscope) {\n                dataFrame.addSensor(new GyroscopeObject(sourceUID + '_gyro', new AngularVelocity(gyroscope.x, gyroscope.y, gyroscope.z, AngularVelocityUnit.RADIAN_PER_SECOND), frequency));\n            }\n            if (orientation) {\n                dataFrame.addSensor(new AbsoluteOrientationSensorObject(sourceUID + '_absoluteorientation', Orientation.fromQuaternion(new Quaternion(...orientation.quaternion)), frequency));\n            }\n            if (relativeOrientation) {\n                dataFrame.addSensor(new RelativeOrientationSensorObject(sourceUID + '_relativeorientation', Orientation.fromQuaternion(new Quaternion(...relativeOrientation.quaternion)), frequency));\n            }\n            if (magnetometer) {\n                dataFrame.addSensor(new MagnetometerObject(sourceUID + '_mag', new Magnetism(magnetometer.x, magnetometer.y, magnetometer.z), frequency));\n            }\n            this.push(dataFrame);\n            resolve();\n        });\n    }\n    onPull() {\n        return new Promise((resolve) => {\n            resolve(undefined);\n        });\n    }\n    findSensor(sensor) {\n        switch (sensor) {\n            case RelativeOrientationSensorObject:\n                return RelativeOrientationSensor;\n            case AbsoluteOrientationSensorObject:\n                return AbsoluteOrientationSensor;\n            case LinearAccelerationSensorObject:\n                return LinearAccelerationSensor;\n            // case SensorType.AMBIENT_LIGHT:\n            //     return AmbientLightSensor;\n            case GyroscopeObject:\n                return Gyroscope;\n            case MagnetometerObject:\n                return Magnetometer;\n            case AccelerometerObject:\n                return Accelerometer;\n            default:\n                return undefined;\n        }\n    }\n    static getPermissions(sensor) {\n        switch (sensor) {\n            // case SensorType.AMBIENT_LIGHT:\n            //     return [\"ambient-light-sensor\"];\n            case RelativeOrientationSensorObject:\n            case AbsoluteOrientationSensorObject:\n                return ['gyroscope', 'accelerometer', 'magnetometer'];\n            case GyroscopeObject:\n                return ['gyroscope'];\n            case MagnetometerObject:\n                return ['magnetometer'];\n            case LinearAccelerationSensorObject:\n            case AccelerometerObject:\n                return ['accelerometer'];\n            default:\n                return undefined;\n        }\n    }\n}\n//# sourceMappingURL=SensorSourceNode.js.map","import { Acceleration, AngularVelocity, DataFrame, Orientation, SourceNode, AbsoluteOrientationSensor as AbsoluteOrientationSensorObject, Gyroscope as GyroscopeObject, Accelerometer as AccelerometerObject, DataObject, } from '@openhps/core';\n/**\n * IMU source using the HTML5 browser API for device motion and device orientation.\n *\n * @category Source node\n */\nexport class SensorSourceNode extends SourceNode {\n    constructor(options) {\n        var _a;\n        super(options);\n        this.options.source = (_a = this.options.source) !== null && _a !== void 0 ? _a : new DataObject(this.uid);\n        if (this.options.autoStart) {\n            this.once('build', this.start.bind(this));\n        }\n        this.once('destroy', this.stop.bind(this));\n    }\n    requestPermission() {\n        return Promise.resolve();\n    }\n    start() {\n        return new Promise((resolve) => {\n            const sensorUID = this.source ? this.source.uid : this.uid;\n            window.addEventListener('devicemotion', (event) => {\n                // Create a new data frame for the orientation change\n                const dataFrame = new DataFrame();\n                const frequency = 1000 / event.interval;\n                dataFrame.addSensor(new AccelerometerObject(sensorUID + '_accl', new Acceleration(event.accelerationIncludingGravity.x, event.accelerationIncludingGravity.y, event.accelerationIncludingGravity.z), frequency));\n                dataFrame.addSensor(new GyroscopeObject(sensorUID + '_gyro', new AngularVelocity(event.rotationRate.beta, event.rotationRate.gamma, event.rotationRate.alpha), frequency));\n                dataFrame.addSensor(new AccelerometerObject(sensorUID + '_linearaccl', new Acceleration(event.acceleration.x, event.acceleration.y, event.acceleration.z), frequency));\n                const source = this.source;\n                source.getPosition().angularVelocity = dataFrame.getSensor(GyroscopeObject).value;\n                dataFrame.addSensor(new AbsoluteOrientationSensorObject(sensorUID + '_orientation', source.getPosition().orientation));\n                dataFrame.source = source;\n                this.push(dataFrame);\n            }, true);\n            window.addEventListener('deviceorientation', (event) => {\n                const source = this.source;\n                source.getPosition().orientation = Orientation.fromEuler([event.beta, event.gamma, event.alpha]);\n            });\n            this.logger('debug', 'Browser orientation and motion events registered!');\n            resolve();\n        });\n    }\n    stop() {\n        return Promise.resolve();\n    }\n    onPull() {\n        return new Promise((resolve) => {\n            resolve(undefined);\n        });\n    }\n}\n//# sourceMappingURL=SensorSourceNode.js.map","import { SensorSourceNode } from './web/SensorSourceNode';\nimport { SensorSourceNode as SensorSourceNodeLegacy } from './legacy/SensorSourceNode';\nexport { SensorSourceNode };\nmodule.exports = 'Accelerometer' in window ? { SensorSourceNode } : { SensorSourceNode: SensorSourceNodeLegacy };\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(229);\n"],"names":["y","x","__webpack_require__","d","__WEBPACK_EXTERNAL_MODULE__openhps_core_es_min_js_27733f5f__","AbsoluteOrientationSensor","Acceleration","Accelerometer","AngularVelocity","AngularVelocityUnit","DataFrame","DataObject","Gyroscope","LinearAccelerationSensor","Magnetism","Magnetometer","Orientation","Quaternion","RelativeOrientationSensor","SourceNode","SensorSourceNode","constructor","options","super","this","_subscriptions","Map","_values","_lastPush","_running","interval","autoStart","once","start","bind","stop","static","sensors","requestPermissions","Promise","resolve","reject","all","map","sensor","getPermissions","permission","navigator","permissions","query","name","reduce","a","b","then","results","every","result","state","catch","size","forEach","sensorInstance","findSensor","frequency","Math","round","addEventListener","event","set","target","_isUpdated","timeStamp","createFrame","ex","logger","Array","from","values","filter","timestamp","length","activated","softStop","value","dataFrame","source","acceleration","get","linearAcceleration","gyroscope","orientation","relativeOrientation","magnetometer","sourceUID","uid","addSensor","z","quaternion","push","onPull","undefined","_a","requestPermission","sensorUID","window","accelerationIncludingGravity","rotationRate","beta","gamma","alpha","getPosition","angularVelocity","getSensor","exports","__webpack_module_cache__","moduleId","cachedModule","module","id","loaded","__webpack_modules__","definition","key","o","Object","defineProperty","enumerable","hmd","create","children","Error","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}